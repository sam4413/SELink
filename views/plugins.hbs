<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title>AMPLink Control Panel</title>
<link href="/style.css" rel="stylesheet" type="text/css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
</head>
<body>

<div class="sidenav">
  <img src="/resources/images/branding.png" alt="branding" width="200" height="80">
  <a href="/">Home</a>
  <a href="/panel">Server Control Panel&nbsp;</a>
  <a href="/console">Server Console</a>
  <a href="/players">Chat/Players</a>
  <a href="/grids">Grids/Entities</a>
  <a href="/users">Users</a>
  <a href="/about">About</a>
  <div class="brightercolor"><a href="#">Welcome, <b>{{#if message }}{{message}}{{/if}}</b><br><form action="/logout"><input type="submit" value="Logout" class="btn btn-danger"></form></a></div>
</div>
<main>

<div class="content">
  <h2>Torch Plugin Search</h2>
  <p class="subtitle2"><a href="/panel">Server Control Panel</a> > <a href="/configurator">Plugins Management</a> > Plugin Search</p>

<div class="row">
<div class="col-md-11">

<div class="callout-warning">
  <b>Adding or removing plugins could break the torch instance, or make AMPLink inaccessible.</b>
</div>

<h3>Plugins</h3>
<div class="callout-info">
  <span class="text-adaptive">
    <strong>Available Plugins</strong><!--<br>
    Filters <i class="text-adaptive bi bi-funnel-fill"></i> | <input type="text" class="col-md-5" id="myInput" placeholder="Search..." name="myInput" oninput="myFunction()">-->
  </span>
  <hr>
  <div id="pluginlist">Please wait, retrieving info...</div>
</div>

<script>
  const staticData = () => {
    fetch('/configurator/plugins/list/')
  .then(response => response.text())
  .then(html => {
    const parser = new DOMParser();
    const doc = parser.parseFromString(html, 'text/html');
    const scriptTag = doc.querySelector('script');
    const scriptContent = scriptTag.textContent;
    const targetElement = document.getElementById('pluginlist');
    targetElement.innerHTML = html;
    // execute the script content if necessary
    eval(scriptContent);
  });
  };
staticData()
//setInterval(updateVariable, 1000);

</script>

</div>
</div>
</div>
</div>

</main>
</body>
</html>